import os
from flask import Flask, request
from telegram import Bot, Update
from telegram.ext import Dispatcher, CommandHandler, MessageHandler, Filters
from telegram.ext import CallbackContext
import logging

# –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥–µ–±–∞–≥—É
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω
TOKEN = os.getenv("TELEGRAM_TOKEN")
bot = Bot(token=TOKEN)

# Flask —Å–µ—Ä–≤–µ—Ä
app = Flask(__name__)

# Dispatcher –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∞–ø–¥–µ–π—Ç—ñ–≤
dispatcher = Dispatcher(bot, None, workers=0)

# ====== –•–µ–Ω–¥–ª–µ—Ä–∏ –∫–æ–º–∞–Ω–¥ ======
def start(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏. –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥, —ñ —è –¥–æ–ø–æ–º–æ–∂—É üòâ")

def echo(update: Update, context: CallbackContext):
    text = update.message.text
    try:
        result = eval(text)  # ‚ö†Ô∏è –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É, –∫—Ä–∞—â–µ –∑—Ä–æ–±–∏—Ç–∏ –±–µ–∑ eval
        update.message.reply_text(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å: {result}")
    except:
        update.message.reply_text("–ù–µ —Ä–æ–∑—É–º—ñ—é —Ü–µ–π –ø—Ä–∏–∫–ª–∞–¥ üòÖ")

# –î–æ–¥–∞—î–º–æ —Ö–µ–Ω–¥–ª–µ—Ä–∏
dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, echo))

# ====== Flask endpoint ======
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "ok"

@app.route("/")
def home():
    return "–ë–æ—Ç –ø—Ä–∞—Ü—é—î!"

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ Flask –Ω–∞ –ø–æ—Ä—Ç—É, —è–∫–∏–π –¥–∞—î Render
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)
